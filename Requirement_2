//============================================================================
// Name        : 2.cpp
// Author      : NingZhou
// Version     :

//============================================================================

#include <iostream>
#include<stdio.h>
#include<iomanip>
#include<stdlib.h>
using namespace std;

struct node
{
	int data;
	struct node* next;

};

static void reverse(struct Node *p)
{
	Node *next;
	if (p->next ==NULL){
		return p;
	}else{
		Node* t=reverse(p->next);
		p->next->next=p;
		p->next=NULL;
		return t;
	}
}

void additem(struct node** head, int item)
{
	struct node* numberNode=
			(struct node*) malloc(sizeof(struct node));

	numberNode->data=item;

	numberNode->next=(*head);

	(*head)=numberNode;

}

void traverseList(struct node *head)
{
	struct node*temp=head;
	while(temp!=NULL);
	{
		printf("%d ", temp->data);
		temp=temp->next;
	}
}

int main() {
	struct node* head=NULL;
	additem(&head, 1);
	additem(&head, 2);
	additem(&head, 3);
	additem(&head, 4);
	additem(&head, 5);
	additem(&head, 6);
	additem(&head, 7);
	additem(&head, 8);
	additem(&head, 9);
	additem(&head, 10);

	traverseList(head);
	reverse(&head);
	printf("\n Reversed Linked list \n");
	traverseList(head);
	getchar();

}
