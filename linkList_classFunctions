#include <iostream>
#include <stdio.h>
#include <iomanip>
#include <stdlib.h>

using namespace std;

class Node{
public:
	int data;
	Node *node;
	Node* next;
	//how to structure a linklist with the next node
	Node(){
	}
};

class linkList{
public:
	Node *element;
	Node* next;
	//how to structure a linklist with the next node
    linkList() {
        element = NULL;
        * next=NULL;
    }

    linkList(int val) {
        Node *element = new Node();
        cout << "element = " << element << endl;
        element->data = val;
    }
    Node *addNode(Node *element, int elementValue);
    Node *Traverse(Node *element);
    Node *sumRecursion(Node *element, int data);
};


Node *linkList::addNode(Node *element, int elementValue){
		element->data=elementValue;
		//assign a value to a node
		//point to the next node and assign value
}

Node *linkList::Traverse(Node *element) {
		Node *e=new Node();
		while(e->data!=NULL)
		{
			printf("%d ", e->data);
			};
}


int main(int argc, const char * argv[]){
	linkList mylinkList;
	//how to declare user's linklist and its functions using declared
	Node *userNode=new Node();
	//userInputLinkList.addNode(element, 15);
	//myTree.findNode(treeNode,15);
	cout << "Here is a link list." << endl;
	return 0;
}
